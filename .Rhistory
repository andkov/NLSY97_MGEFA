source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Promax$F
rotation<- "Promax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Quartimin$F
rotation<- "Quartimin"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Bifactor$F
rotation<- "Bifactor"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$BifactorOblique$F
rotation<- "BifactorOblique"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
################
# Chose labels for graph production
dsGovresp
View(dsGovresp)
# rm(list=ls(all=TRUE)) #Disable when working in "NLSY-97_Religiosity.Rproj"
require(ggplot2)
require(plyr)
require(reshape2)
require(lme4) #Load the library necessary for multilevel models
require(colorspace) #Load the library necessary for creating tightly-controlled palettes.
require(car)
pathDir<-file.path(getwd())
# Select the variables for analysis
keepvar <- c("id", "byear", responsibilityvars)
dsW_Gov <- dsGovresp[keepvar]
#Transform the wide dataset into a long dataset
dsLong <- reshape2::melt(dsW_Gov, id.vars=c("id", "byear"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(variable="item", value="agree"))
#Sort for the sake of visual inspection.
dsLong<-dsLong[order(dsLong$id,dsLong$byear),]
dsL_Gov<-dsLong
rm(dsLong)
head(dsL_Gov, 20)
dsL_Gov<-ddply(dsL_Gov,.(item),transform,mean=mean(agree)) # create column with agregated mean
dsL_Gov<-dsL_Gov[order(dsL_Gov$mean),] # sort by descenting mean of item
oitems<-unique(dsL_Gov$item)
dsL_Gov$item<-ordered(dsL_Gov$item,levels=oitems)
str(dsL_Gov$item)
dsL_Gov80<-subset(dsL_Gov, byear==1980)
dsL_Gov81<-subset(dsL_Gov, byear==1981)
dsL_Gov82<-subset(dsL_Gov, byear==1982)
dsL_Gov83<-subset(dsL_Gov, byear==1983)
dsL_Gov84<-subset(dsL_Gov, byear==1984)
pathImageOut<-file.path(getwd(),"government","years") # save files in...
#Distribution for all
p<-ggplot(dsL_Gov80,aes(x=factor(agree),group=item))+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))+
ggtitle("All")
pathFileOut<-file.path(pathImageOut,paste0("items","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for all
p<-ggplot(dsL_Gov80,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
# rm(list=ls(all=TRUE)) #Disable when working in "NLSY-97_Religiosity.Rproj"
require(ggplot2)
require(plyr)
require(reshape2)
require(lme4) #Load the library necessary for multilevel models
require(colorspace) #Load the library necessary for creating tightly-controlled palettes.
require(car)
pathDir<-file.path(getwd())
# Select the variables for analysis
keepvar <- c("id", "byear", responsibilityvars)
dsW_Gov <- dsGovresp[keepvar]
#Transform the wide dataset into a long dataset
dsLong <- reshape2::melt(dsW_Gov, id.vars=c("id", "byear"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(variable="item", value="agree"))
#Sort for the sake of visual inspection.
dsLong<-dsLong[order(dsLong$id,dsLong$byear),]
dsL_Gov<-dsLong
rm(dsLong)
head(dsL_Gov, 20)
dsL_Gov<-ddply(dsL_Gov,.(item),transform,mean=mean(agree)) # create column with agregated mean
dsL_Gov<-dsL_Gov[order(dsL_Gov$mean),] # sort by descenting mean of item
oitems<-unique(dsL_Gov$item)
dsL_Gov$item<-ordered(dsL_Gov$item,levels=oitems)
str(dsL_Gov$item)
dsL_Gov80<-subset(dsL_Gov, byear==1980)
dsL_Gov81<-subset(dsL_Gov, byear==1981)
dsL_Gov82<-subset(dsL_Gov, byear==1982)
dsL_Gov83<-subset(dsL_Gov, byear==1983)
dsL_Gov84<-subset(dsL_Gov, byear==1984)
pathImageOut<-file.path(getwd(),"government","years") # save files in...
#Distribution for 1980
p<-ggplot(dsL_Gov80,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1981
p<-ggplot(dsL_Gov80,aes(x=factor(agree),group=item))+
ggtitle("1981")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1982
p<-ggplot(dsL_Gov82,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1983
p<-ggplot(dsL_Gov83,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1984
p<-ggplot(dsL_Gov84,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
# rm(list=ls(all=TRUE)) #Disable when working in "NLSY-97_Religiosity.Rproj"
require(ggplot2)
require(plyr)
require(reshape2)
require(lme4) #Load the library necessary for multilevel models
require(colorspace) #Load the library necessary for creating tightly-controlled palettes.
require(car)
pathDir<-file.path(getwd())
# Select the variables for analysis
keepvar <- c("id", "byear", responsibilityvars)
dsW_Gov <- dsGovresp[keepvar]
#Transform the wide dataset into a long dataset
dsLong <- reshape2::melt(dsW_Gov, id.vars=c("id", "byear"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(variable="item", value="agree"))
#Sort for the sake of visual inspection.
dsLong<-dsLong[order(dsLong$id,dsLong$byear),]
dsL_Gov<-dsLong
rm(dsLong)
head(dsL_Gov, 20)
dsL_Gov<-ddply(dsL_Gov,.(item),transform,mean=mean(agree)) # create column with agregated mean
dsL_Gov<-dsL_Gov[order(dsL_Gov$mean),] # sort by descenting mean of item
oitems<-unique(dsL_Gov$item)
dsL_Gov$item<-ordered(dsL_Gov$item,levels=oitems)
str(dsL_Gov$item)
dsL_Gov80<-subset(dsL_Gov, byear==1980)
dsL_Gov81<-subset(dsL_Gov, byear==1981)
dsL_Gov82<-subset(dsL_Gov, byear==1982)
dsL_Gov83<-subset(dsL_Gov, byear==1983)
dsL_Gov84<-subset(dsL_Gov, byear==1984)
pathImageOut<-file.path(getwd(),"government","years") # save files in...
#Distribution for 1980
p<-ggplot(dsL_Gov80,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1980",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1981
p<-ggplot(dsL_Gov80,aes(x=factor(agree),group=item))+
ggtitle("1981")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1981",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1982
p<-ggplot(dsL_Gov82,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1982",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1983
p<-ggplot(dsL_Gov83,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1983",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1984
p<-ggplot(dsL_Gov84,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1984",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
# rm(list=ls(all=TRUE)) #Disable when working in "NLSY-97_Religiosity.Rproj"
require(ggplot2)
require(plyr)
require(reshape2)
require(lme4) #Load the library necessary for multilevel models
require(colorspace) #Load the library necessary for creating tightly-controlled palettes.
require(car)
pathDir<-file.path(getwd())
# Select the variables for analysis
keepvar <- c("id", "byear", responsibilityvars)
dsW_Gov <- dsGovresp[keepvar]
#Transform the wide dataset into a long dataset
dsLong <- reshape2::melt(dsW_Gov, id.vars=c("id", "byear"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(variable="item", value="agree"))
#Sort for the sake of visual inspection.
dsLong<-dsLong[order(dsLong$id,dsLong$byear),]
dsL_Gov<-dsLong
rm(dsLong)
head(dsL_Gov, 20)
dsL_Gov<-ddply(dsL_Gov,.(item),transform,mean=mean(agree)) # create column with agregated mean
dsL_Gov<-dsL_Gov[order(dsL_Gov$mean),] # sort by descenting mean of item
oitems<-unique(dsL_Gov$item)
dsL_Gov$item<-ordered(dsL_Gov$item,levels=oitems)
str(dsL_Gov$item)
dsL_Gov80<-subset(dsL_Gov, byear==1980)
dsL_Gov81<-subset(dsL_Gov, byear==1981)
dsL_Gov82<-subset(dsL_Gov, byear==1982)
dsL_Gov83<-subset(dsL_Gov, byear==1983)
dsL_Gov84<-subset(dsL_Gov, byear==1984)
pathImageOut<-file.path(getwd(),"government","years") # save files in...
#Distribution for 1980
p<-ggplot(dsL_Gov80,aes(x=factor(agree),group=item))+
ggtitle("1980")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1980",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1981
p<-ggplot(dsL_Gov80,aes(x=factor(agree),group=item))+
ggtitle("1981")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1981",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1982
p<-ggplot(dsL_Gov82,aes(x=factor(agree),group=item))+
ggtitle("1982")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1982",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1983
p<-ggplot(dsL_Gov83,aes(x=factor(agree),group=item))+
ggtitle("1983")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1983",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1984
p<-ggplot(dsL_Gov84,aes(x=factor(agree),group=item))+
ggtitle("1984")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1984",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for 1981
p<-ggplot(dsL_Gov81,aes(x=factor(agree),group=item))+
ggtitle("1981")+
geom_bar(aes(y = ..density..,group=item)) +
facet_grid(item~.)+
scale_y_continuous(limits=c(0,1))
pathFileOut<-file.path(pathImageOut,paste0("items","_","1981",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
pathPatternPerson<-file.path(getwd(),"functions","factor pattern gov.R")
pathScree<-file.path(getwd(),"functions","scree.R")
nfactors<-4 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-40         # resolution of pattern
#################################################################################
# Image production
fit<-fit.4.MLFA # (2)
str(fit)
pattern<-fit$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Varimax$F
rotation<- "Varimax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Promax$F
rotation<- "Promax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Quartimin$F
rotation<- "Quartimin"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Bifactor$F
rotation<- "Bifactor"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$BifactorOblique$F
rotation<- "BifactorOblique"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
################
# Chose labels for graph production
pathImageOut<-file.path(getwd(),"government") # save files in...
fit<-fit.4.MLFA # (2)
str(fit)
pattern<-fit$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Varimax$F
rotation<- "Varimax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Promax$F
rotation<- "Promax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Quartimin$F
rotation<- "Quartimin"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Bifactor$F
rotation<- "Bifactor"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$BifactorOblique$F
rotation<- "BifactorOblique"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
################
# Chose labels for graph production
pathImageOut<-file.path(getwd(),"government","F2") # save files in...
fit<-fit.2.MLFA # (2)
str(fit)
pattern<-fit$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Varimax$F
rotation<- "Varimax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Promax$F
rotation<- "Promax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Quartimin$F
rotation<- "Quartimin"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Bifactor$F
rotation<- "Bifactor"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$BifactorOblique$F
rotation<- "BifactorOblique"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
################
# Chose labels for graph production
fit.2.MLFA<-MLFA(Correlation.Matrix=R,n.factors=2, n.obs=nrow(ds))
nfactors<-2 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-40         # resolution of pattern
#################################################################################
# Image production
pathImageOut<-file.path(getwd(),"government","F2") # save files in...
fit<-fit.2.MLFA # (2)
str(fit)
pattern<-fit$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Varimax$F
rotation<- "Varimax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Promax$F
rotation<- "Promax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Quartimin$F
rotation<- "Quartimin"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Bifactor$F
rotation<- "Bifactor"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$BifactorOblique$F
rotation<- "BifactorOblique"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
################
# Chose labels for graph production
nfactors<-2 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-40         # resolution of pattern
#################################################################################
# Image production
pathImageOut<-file.path(getwd(),"government","F2") # save files in...
fit<-fit.2.MLFA # (2)
str(fit)
pattern<-fit$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Varimax$F
rotation<- "Varimax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Promax$F
rotation<- "Promax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Quartimin$F
rotation<- "Quartimin"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$Bifactor$F
rotation<- "Bifactor"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit$BifactorOblique$F
rotation<- "BifactorOblique"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
################
# Chose labels for graph production
fit$Promax$F
print(fit.2.MLFA)
