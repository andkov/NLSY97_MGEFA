png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
dev.off()
#Distribution for Females
p<-ggplot(dsL_PersonMale,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","Female",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
require(ggplot2)
#Distribution for Females
p<-ggplot(dsL_PersonMale,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","Female",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for Females
p<-ggplot(dsL_PersonFemale,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","Female",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for all
p<-ggplot(dsL_Person,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))+
ggtitle("All")
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for all
p<-ggplot(dsL_Person,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))+
ggtitle("All")
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for Males
p<-ggplot(dsL_PersonMale,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))
ggtitle("Males")
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","Male",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for Females
p<-ggplot(dsL_PersonFemale,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))
ggtitle("Females")
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","Female",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for all
p<-ggplot(dsL_Person,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))+
ggtitle("All")
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","all",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for Males
p<-ggplot(dsL_PersonMale,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))+
ggtitle("Males")
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","Male",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#Distribution for Females
p<-ggplot(dsL_PersonFemale,aes(x=factor(slider12345),group=trait))+
geom_bar(aes(y = ..density..,group=trait)) +
facet_grid(trait~.)+
scale_y_continuous(limits=c(0,.8))+
ggtitle("Females")
pathFileOut<-file.path(pathImageOut,paste0("Traits","_","Female",".png"))
png(filename = pathFileOut,
width =5, height =9 , units = "in",res=90)
plot(p)
dev.off()
#############################################################
# prepare : options, packages, data
#rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # adjust how scientific notation is displayed
library(Hmisc)
library(sem)
library(psych)
library(corrgram)
library(ggplot2)
library(sem)
# Load custom functions
pathGitHub <- file.path("C:/Users/ludmila/Documents/GitHub")
source(file.path(pathGitHub,"Steiger_Multivariate/functions","Steiger R library functions.txt"))
source(file.path(pathGitHub,"Steiger_Multivariate/functions","AdvancedFactorFunctions.txt"))
source(file.path(pathGitHub,"Steiger_Multivariate/functions","fa.promax.R"))
# create new dataset without missing data
ds <-dsPersonality[personalityvars]
summary(ds)
R<-cor(ds) # correlation matrix R of personality variables
S<-cov(ds) # covariance matrix S of personality variables
empty<-matrix(numeric(0),ncol(R),ncol(R))
rownames(empty)<-rownames(R)
colnames(empty)<-paste0("xC",1:ncol(R))
table(ds$organized)
######### Initial data visualization #########
pathImageOut<-file.path(getwd(),"personality") # save files in...
# Correlation matrix of 8 personality variables
title<-paste0("Correlation among 8 personality descriptors")
pathFileOut<-file.path(pathImageOut,paste0("personalitycor.png"))
png(filename = pathFileOut, width =7, height =7 , units = "in", res=100)
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie,type="cor",order=TRUE,
main=title)
dev.off()
Scree.Plot(R)
FA.Stats(R,n.factors=1:4,n.obs=nrow(ds), RMSEA.cutoff=.05)
fit.3.MLFA<-MLFA(Correlation.Matrix=R,n.factors=3, n.obs=nrow(ds))
fit<-fit.3.MLFA # (2)
Loadings(fit,num.digits=2,cutoff=.3)
print(fit)
#############################################################
########### options for the pattern graphs
pathPattern<-file.path(getwd(),"functions","factor pattern.R")
pathScree<-file.path(getwd(),"functions","scree.R")
nfactors<-3 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-100         # resolution of pattern
#################################################################################
# Image production
pattern<-fit.3.MLFA$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:",rotation,)
source(pathPattern) #produces the graph of pattern loadings
#############################################################
########### options for the pattern graphs
pathPattern<-file.path(getwd(),"functions","factor pattern.R")
pathScree<-file.path(getwd(),"functions","scree.R")
nfactors<-3 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-100         # resolution of pattern
#################################################################################
# Image production
pattern<-fit.3.MLFA$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:",rotation,)
source(pathPattern) #produces the graph of pattern loadings
rotation<- "Unrotated"
rotation
title1<- paste0("Pattern values:",rotation,)
nfactors<-3 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-100         # resolution of pattern
#################################################################################
# Image production
pattern<-fit.3.MLFA$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:",rotation)
source(pathPattern) #produces the graph of pattern loadings
dsLong <- reshape2::melt(pattern, id.vars=c("row.names"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(Var1="measure",Var2="pc"))
dsFORp<-dsLong
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,30)
dsFORp$measure<-ordered(dsFORp$measure,levels=otraits)
str(dsFORp)
dsFORp$measure<-factor(dsFORp$measure,levels=otraits)
head(dsFORp,30)
otraits
dsFORp$measure
dsFORp$measure<-factor(dsFORp$measure,levels=otraits)
dsFORp$measure
dsFORp$measure<-ordered(dsFORp$measure,levels=otraits)
dsFORp$measure
str(dsFORp)
p<-ggplot(dsFORp, aes(x=measure, y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(0,.25,.5,.75,1))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
p<-ggplot(dsFORp, aes(x=desc(measure), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(0,.25,.5,.75,1))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
p<-ggplot(dsFORp, aes(x=descending(measure), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(0,.25,.5,.75,1))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
p<-ggplot(dsFORp, aes(x=-measure, y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(0,.25,.5,.75,1))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
p<-ggplot(dsFORp, aes(x=reorder(measure,otraits), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(0,.25,.5,.75,1))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
p<-ggplot(dsFORp, aes(x=reorder(measure,otraits), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(0,.25,.5,.75,1))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
dsFORp$measure<-ordered(dsFORp$measure,levels=rev(otraits))
str(dsFORp)
p<-ggplot(dsFORp, aes(x=reorder(measure,otraits), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(0,.25,.5,.75,1))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
p<-ggplot(dsFORp, aes(x=measure, y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(0,.25,.5,.75,1))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
# library(ggplot2)
# library(colorspace)
# library(gcookbook)
# palette <- choose_palette()
# colors<-palette(2)
dsLong <- reshape2::melt(pattern, id.vars=c("row.names"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(Var1="measure",Var2="pc"))
dsFORp<-dsLong
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,30)
dsFORp$measure<-ordered(dsFORp$measure,levels=rev(otraits))
str(dsFORp)
# library(ggplot2)
# library(colorspace)
# library(gcookbook)
# palette <- choose_palette()
# colors<-palette(2)
dsLong <- reshape2::melt(pattern, id.vars=c("row.names"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(Var1="measure",Var2="pc"))
dsFORp<-dsLong
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,30)
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(0,.25,.5,.75,1))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
pathPatternPerson<-file.path(getwd(),"functions","factor pattern person.R")
nfactors<-3 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-100         # resolution of pattern
#################################################################################
# Image production
pattern<-fit.3.MLFA$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()
p
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()+
ylab("Self-rated personality traits")
p
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()+
xlab("Self-rated personality traits")
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()+
xlab("Self-rated personality traits")
p
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20))+
facet_grid(.~pc)+
coord_flip()+
xlab("Self-rated personality traits")+
ylab("Factor weights")
p
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axix.title.x=element_text(size=14))+
facet_grid(.~pc)+
coord_flip()+
xlab("Self-rated personality traits")+
ylab("Factor weights")
p
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axis.title.x=element_text(size=14))+
facet_grid(.~pc)+
coord_flip()+
xlab("Self-rated personality traits")+
ylab("Factor weights")
p
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axis.title.x=element_text(size=4))+
facet_grid(.~pc)+
coord_flip()+
xlab("Self-rated personality traits")+
ylab("Factor weights")
p
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axis.title.x=element_text(size=4))+
facet_grid(.~pc)+
coord_flip()+
xlab("Self-rated personality traits")+
ylab("Factor weights")
p
pathFileOut<-file.path(pathImageOut,paste0(nfactors,"factor",rotation,".png"))
png(filename = pathFileOut,
width =width, height =height , units = "in",res=resolution)
plot(p)
dev.off()
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axis.title.x=element_text(size=14))+
facet_grid(.~pc)+
coord_flip()+
xlab("Self-rated personality traits")+
ylab("Factor weights")
p
pathFileOut<-file.path(pathImageOut,paste0(nfactors,"factor",rotation,".png"))
png(filename = pathFileOut,
width =width, height =height , units = "in",res=resolution)
plot(p)
dev.off()
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
ggtitle(title1)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
theme(axis.text.x =element_text(angle=0,hjust=1,size=12),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axis.title.x=element_text(size=14))+
facet_grid(.~pc)+
coord_flip()+
xlab("Self-rated personality traits")+
ylab("Factor weights")
p
pathFileOut<-file.path(pathImageOut,paste0(nfactors,"factor",rotation,".png"))
png(filename = pathFileOut,
width =width, height =height , units = "in",res=resolution)
plot(p)
dev.off()
