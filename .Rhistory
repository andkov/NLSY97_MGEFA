scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
xlab("Self-rated personality traits")+
ylab("Factor weights")+
theme(axis.text.x =element_blank(),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axis.title.y=element_blank(),
axis.title.x=element_text(size=20,hjust=0.5),
strip.text=element_text(size=16),
plot.title=element_text(size=20),
legend.title=element_text(size=14))+
guides(fill=FALSE)+
facet_grid(.~pc)+
coord_flip()
p
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
xlab("Self-rated personality traits")+
ylab("Factor weights")+
theme(axis.text.x =element_blank(),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
strip.text=element_blank(),
plot.title=element_blank(),
legend.title=element_blank())+
guides(fill=FALSE)+
facet_grid(.~pc)+
coord_flip()
p
width<-2.4              # width of pattern in inches
height<-3.4             # height of pattern in inches
resolution<-40
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
xlab("Self-rated personality traits")+
ylab("Factor weights")+
theme(axis.text.x =element_blank(),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
strip.text=element_blank(),
plot.title=element_blank(),
legend.title=element_blank())+
guides(fill=FALSE)+
facet_grid(.~pc)+
coord_flip()
p
pathFileOut<-file.path(pathImageOut,paste0("thumbs_",nfactors,"_",rotation,".png"))
png(filename = pathFileOut,
width =width, height =height , units = "in",res=resolution)
plot(p)
dev.off()
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
xlab("Self-rated personality traits")+
ylab("Factor weights")+
theme(axis.text.x =element_blank(),
axis.text.y =element_text(angle=0,hjust=1,size=20),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
strip.text=element_blank(),
plot.title=element_blank(),
legend.title=element_blank())+
guides(fill=FALSE)+
facet_grid(.~pc)+
coord_flip()
p
p<-ggplot(dsFORp, aes(x=ordered(measure,levels=rev(otraits)), y=value, fill=positive))+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1),
breaks=c(.2,.4,.6,.8))+
xlab("Self-rated personality traits")+
ylab("Factor weights")+
theme(axis.text.x =element_blank(),
axis.text.y =element_blank(),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
strip.text=element_blank(),
plot.title=element_blank(),
legend.title=element_blank())+
guides(fill=FALSE)+
facet_grid(.~pc)+
coord_flip()
p
width<-2.4              # width of pattern in inches
height<-3.4             # height of pattern in inches
resolution<-40
pathPatternPersonThumbs<-file.path(getwd(),"functions","factor pattern person thumbs.R")
pattern<-fit.3.MLFA$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values: ",rotation,"  |  Group: ", sex)
source(pathPatternPersonThumbs) #produces the graph of pattern loadings
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-40
pathPatternPersonThumbs<-file.path(getwd(),"functions","factor pattern person thumbs.R")
pattern<-fit.3.MLFA$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values: ",rotation,"  |  Group: ", sex)
source(pathPatternPersonThumbs) #produces the graph of pattern loadings
dev.off()
nfactors<-3 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-40         # resolution of pattern
#################################################################################
# Image production
str(fit)
pattern<-fit.3.MLFA$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values: ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Varimax$F
rotation<- "Varimax"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Promax$F
rotation<- "Promax"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Quartimin$F
rotation<- "Quartimin"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Bifactor$F
rotation<- "Bifactor"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$BifactorOblique$F
rotation<- "BifactorOblique"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
#############################################################
# prepare : options, packages, data
#rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # adjust how scientific notation is displayed
library(Hmisc)
library(sem)
library(psych)
library(corrgram)
library(ggplot2)
library(sem)
# Load custom functions
pathGitHub <- file.path("C:/Users/ludmila/Documents/GitHub")
source(file.path(pathGitHub,"Steiger_Multivariate/functions","Steiger R library functions.txt"))
source(file.path(pathGitHub,"Steiger_Multivariate/functions","AdvancedFactorFunctions.txt"))
source(file.path(pathGitHub,"Steiger_Multivariate/functions","fa.promax.R"))
# create new dataset without missing data
ds <-dsPersonality[personalityvars]
summary(ds)
R<-cor(ds) # correlation matrix R of personality variables
S<-cov(ds) # covariance matrix S of personality variables
empty<-matrix(numeric(0),ncol(R),ncol(R))
rownames(empty)<-rownames(R)
colnames(empty)<-paste0("xC",1:ncol(R))
# table(ds$organized)
######### Initial data visualization #########
pathImageOut<-file.path(getwd(),"personality") # save files in...
# Correlation matrix of 8 personality variables
title<-paste0("Correlation among 8 personality descriptors")
pathFileOut<-file.path(pathImageOut,paste0("personalitycor.png"))
png(filename = pathFileOut, width =7, height =7 , units = "in", res=100)
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie,type="cor",order=TRUE,
main=title)
dev.off()
######################################################################
# Diagnosing number of factors
Scree.Plot(R)
FA.Stats(R,n.factors=1:4,n.obs=nrow(ds), RMSEA.cutoff=.05)
# Decomposion solutions, (1)
fit.3.MLFA<-MLFA(Correlation.Matrix=R,n.factors=3, n.obs=nrow(ds))
#########################
fit<-fit.3.MLFA # (2)
Loadings(fit,num.digits=2,cutoff=.3)
print(fit)
##########################
#str(fit.3.MLFA)
#fit.3.MLFA$Varimax$F
#rownames(fit.3.MLFA$Varimax$F)
#############################################################
########### options for the pattern graphs
pathPatternPerson<-file.path(getwd(),"functions","factor pattern person.R")
pathScree<-file.path(getwd(),"functions","scree.R")
nfactors<-3 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-40         # resolution of pattern
#################################################################################
# Image production
str(fit)
pattern<-fit.3.MLFA$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Varimax$F
rotation<- "Varimax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Promax$F
rotation<- "Promax"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Quartimin$F
rotation<- "Quartimin"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Bifactor$F
rotation<- "Bifactor"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$BifactorOblique$F
rotation<- "BifactorOblique"
title1<- paste0("Pattern values:  ",rotation)
source(pathPatternPerson) #produces the graph of pattern loadings
################
# Chose labels for graph production
#############################################################
# prepare : options, packages, data
#rm(list=ls(all=TRUE)) #Clear out variables from previous runs.
options("scipen"=10, "digits"=5) # adjust how scientific notation is displayed
library(Hmisc)
library(sem)
library(psych)
library(corrgram)
library(ggplot2)
library(sem)
# Load custom functions
pathGitHub <- file.path("C:/Users/ludmila/Documents/GitHub")
source(file.path(pathGitHub,"Steiger_Multivariate/functions","Steiger R library functions.txt"))
source(file.path(pathGitHub,"Steiger_Multivariate/functions","AdvancedFactorFunctions.txt"))
source(file.path(pathGitHub,"Steiger_Multivariate/functions","fa.promax.R"))
# create new dataset without missing data
sex<-"male"
ds<-subset(dsPersonality,sex==1)
ds <-ds[personalityvars]
summary(ds)
R<-cor(ds) # correlation matrix R of personality variables
S<-cov(ds) # covariance matrix S of personality variables
empty<-matrix(numeric(0),ncol(R),ncol(R))
rownames(empty)<-rownames(R)
colnames(empty)<-paste0("xC",1:ncol(R))
# table(ds$organized)
######### Initial data visualization #########
pathImageOut<-file.path(getwd(),"personality","male") # save files in...
# Correlation matrix of 8 personality variables
title<-paste0("Correlation among 8 personality descriptors")
pathFileOut<-file.path(pathImageOut,paste0("personalitycor.png"))
png(filename = pathFileOut, width =7, height =7 , units = "in", res=100)
corrgram(R,upper.panel=panel.conf,lower.panel=panel.pie,type="cor",order=TRUE,
main=title)
dev.off()
######################################################################
# Diagnosing number of factors
Scree.Plot(R)
FA.Stats(R,n.factors=1:4,n.obs=nrow(ds), RMSEA.cutoff=.05)
# Decomposion solutions, (1)
fit.3.MLFA<-MLFA(Correlation.Matrix=R,n.factors=3, n.obs=nrow(ds))
#########################
fit<-fit.3.MLFA # (2)
Loadings(fit,num.digits=2,cutoff=.3)
print(fit)
##########################
#str(fit.3.MLFA)
#fit.3.MLFA$Varimax$F
#rownames(fit.3.MLFA$Varimax$F)
#############################################################
########### options for the pattern graphs
pathPatternPerson<-file.path(getwd(),"functions","factor pattern person.R")
pathScree<-file.path(getwd(),"functions","scree.R")
nfactors<-3 #ncol(pattern)  #ncol(R)
colors<- c("darksalmon" ,"lightskyblue")
ylims<-c(0,3)           # (min,max) for eigenvalue plot
width<-12              # width of pattern in inches
height<-16             # height of pattern in inches
resolution<-40         # resolution of pattern
#################################################################################
# Image production
str(fit)
pattern<-fit.3.MLFA$Unrotated$F
rotation<- "Unrotated"
title1<- paste0("Pattern values: ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Varimax$F
rotation<- "Varimax"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Promax$F
rotation<- "Promax"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Quartimin$F
rotation<- "Quartimin"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$Bifactor$F
rotation<- "Bifactor"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
pattern<-fit.3.MLFA$BifactorOblique$F
rotation<- "BifactorOblique"
title1<- paste0("Pattern values:  ",rotation,"  |  Group: ", sex)
source(pathPatternPerson) #produces the graph of pattern loadings
################
# Chose labels for graph production
rel<-read.table("dsSource.csv")
# rm(list=ls(all=TRUE)) #Disable when working in "NLSY-97_Religiosity.Rproj"
require(ggplot2)
require(plyr)
require(reshape2)
require(lme4) #Load the library necessary for multilevel models
require(colorspace) #Load the library necessary for creating tightly-controlled palettes.
require(car)
years<-1980:1984
pathDir<-file.path(getwd())
pathGitHub <- file.path("C:/Users/ludmila/Documents/GitHub") # locate the "GitHub" folder on your computer
# Choose datasource if working with more than one
#       "Database_ResponseOfInterest_DateOfDownload"
dataSource<-c("NLSY97_Religion_08032013")
pathDataSource<-file.path(pathGitHub,dataSource,paste0(dataSource,".dct"))
# pathVarNames<-file.path(pathDir,dataSource, paste0(dataSource,"-value-labels.do"))
# input the file with the question id and labels
varnames<-read.csv(pathDataSource,header=FALSE, skip=1,nrows=70,sep=" ")
dsSource<-read.csv(pathDataSource,header=FALSE, skip=73,sep=" ")
# select 4th and 5th collumns
varnames<-varnames[c("V3","V4")]
varnames<-rename(varnames, c("V3"="QID","V4"="Qname"))
varnames <- varnames[order(varnames$QID,varnames$Qname), ]
names(dsSource)<-varnames$QID
dsSource<-rename(dsSource, c(
"R0323900"="famrel_1997",
"R2165200"="famrel_1998",
"R3483100"="famrel_1999",
"R4881300"="famrel_2000",
"R1193900"="agemon_1997",
"R2553400"="agemon_1998",
"R3876200"="agemon_1999",
"R5453600"="agemon_2000",
"R7215900"="agemon_2001",
"S1531300"="agemon_2002",
"S2000900"="agemon_2003",
"S3801000"="agemon_2004",
"S5400900"="agemon_2005",
"S7501100"="agemon_2006",
"T0008400"="agemon_2007",
"T2011000"="agemon_2008",
"T3601400"="agemon_2009",
"T5201300"="agemon_2010",
"R1194100"="ageyear_1997",
"R2553500"="ageyear_1998",
"R3876300"="ageyear_1999",
"R5453700"="ageyear_2000",
"R7216000"="ageyear_2001",
"S1531400"="ageyear_2002",
"S2001000"="ageyear_2003",
"S3801100"="ageyear_2004",
"S5401000"="ageyear_2005",
"S7501200"="ageyear_2006",
"T0008500"="ageyear_2007",
"T2011100"="ageyear_2008",
"T3601500"="ageyear_2009",
"T5201400"="ageyear_2010",
"R1235800"="samplesype",
"S0919700"="todo_2002",
"S6317100"="todo_2005",
"T2782200"="todo_2008",
"R4893400"="attend_2000",
"R6520100"="attend_2001",
"S0919300"="attend_2002",
"S2987800"="attend_2003",
"S4681700"="attend_2004",
"S6316700"="attend_2005",
"S8331500"="attend_2006",
"T0739400"="attend_2007",
"T2781700"="attend_2008",
"T4495000"="attend_2009",
"T6143400"="attend_2010",
"R0536401"="bmonth",
"R0536402"="byear",
"R1482600"="race",
"R0536300"="sex",
"R0555800"="psrelpref",
"R0000100"="id",
"S0919600"="decide_2002",
"S6317000"="decide_2005",
"T2782100"="decide_2008",
"S0919500"="obey_2002",
"S6316900"="obey_2005",
"T2782000"="obey_2008",
"S5532800"="relpref_2005",
"T2111400"="relpref_2008",
"S0919400"="values_2002",
"S6316800"="values_2005",
"T2781900"="values_2008",
"S0919800"="pray_2002",
"S6317200"="pray_2005",
"T2782300"="pray_2008",
"R0552300"="prelpref",
"R0552200"="praised",
"R0555700"="psraised"
))
pathDataSource
pathDataSource<-file.path(pathGitHub,"NLSY-97_Religiosity",dataSource,paste0(dataSource,".dct"))
pathDataSource
varnames<-read.csv(pathDataSource,header=FALSE, skip=1,nrows=70,sep=" ")
dsSource<-read.csv(pathDataSource,header=FALSE, skip=73,sep=" ")
# select 4th and 5th collumns
varnames<-varnames[c("V3","V4")]
varnames<-rename(varnames, c("V3"="QID","V4"="Qname"))
varnames <- varnames[order(varnames$QID,varnames$Qname), ]
names(dsSource)<-varnames$QID
dsSource<-rename(dsSource, c(
"R0323900"="famrel_1997",
"R2165200"="famrel_1998",
"R3483100"="famrel_1999",
"R4881300"="famrel_2000",
"R1193900"="agemon_1997",
"R2553400"="agemon_1998",
"R3876200"="agemon_1999",
"R5453600"="agemon_2000",
"R7215900"="agemon_2001",
"S1531300"="agemon_2002",
"S2000900"="agemon_2003",
"S3801000"="agemon_2004",
"S5400900"="agemon_2005",
"S7501100"="agemon_2006",
"T0008400"="agemon_2007",
"T2011000"="agemon_2008",
"T3601400"="agemon_2009",
"T5201300"="agemon_2010",
"R1194100"="ageyear_1997",
"R2553500"="ageyear_1998",
"R3876300"="ageyear_1999",
"R5453700"="ageyear_2000",
"R7216000"="ageyear_2001",
"S1531400"="ageyear_2002",
"S2001000"="ageyear_2003",
"S3801100"="ageyear_2004",
"S5401000"="ageyear_2005",
"S7501200"="ageyear_2006",
"T0008500"="ageyear_2007",
"T2011100"="ageyear_2008",
"T3601500"="ageyear_2009",
"T5201400"="ageyear_2010",
"R1235800"="samplesype",
"S0919700"="todo_2002",
"S6317100"="todo_2005",
"T2782200"="todo_2008",
"R4893400"="attend_2000",
"R6520100"="attend_2001",
"S0919300"="attend_2002",
"S2987800"="attend_2003",
"S4681700"="attend_2004",
"S6316700"="attend_2005",
"S8331500"="attend_2006",
"T0739400"="attend_2007",
"T2781700"="attend_2008",
"T4495000"="attend_2009",
"T6143400"="attend_2010",
"R0536401"="bmonth",
"R0536402"="byear",
"R1482600"="race",
"R0536300"="sex",
"R0555800"="psrelpref",
"R0000100"="id",
"S0919600"="decide_2002",
"S6317000"="decide_2005",
"T2782100"="decide_2008",
"S0919500"="obey_2002",
"S6316900"="obey_2005",
"T2782000"="obey_2008",
"S5532800"="relpref_2005",
"T2111400"="relpref_2008",
"S0919400"="values_2002",
"S6316800"="values_2005",
"T2781900"="values_2008",
"S0919800"="pray_2002",
"S6317200"="pray_2005",
"T2782300"="pray_2008",
"R0552300"="prelpref",
"R0552200"="praised",
"R0555700"="psraised"
))
# Recode ATTENDANCE into valid values
attendcategoreis<-c(1:8)
dsSource$attend_2000=ifelse((dsSource$attend_2000 %in% attendcategoreis),dsSource$attend_2000,NA)
dsSource$attend_2001=ifelse((dsSource$attend_2001 %in% attendcategoreis),dsSource$attend_2001,NA)
dsSource$attend_2002=ifelse((dsSource$attend_2002 %in% attendcategoreis),dsSource$attend_2002,NA)
dsSource$attend_2003=ifelse((dsSource$attend_2003 %in% attendcategoreis),dsSource$attend_2003,NA)
dsSource$attend_2004=ifelse((dsSource$attend_2004 %in% attendcategoreis),dsSource$attend_2004,NA)
dsSource$attend_2005=ifelse((dsSource$attend_2005 %in% attendcategoreis),dsSource$attend_2005,NA)
dsSource$attend_2006=ifelse((dsSource$attend_2006 %in% attendcategoreis),dsSource$attend_2006,NA)
dsSource$attend_2007=ifelse((dsSource$attend_2007 %in% attendcategoreis),dsSource$attend_2007,NA)
dsSource$attend_2008=ifelse((dsSource$attend_2008 %in% attendcategoreis),dsSource$attend_2008,NA)
dsSource$attend_2009=ifelse((dsSource$attend_2009 %in% attendcategoreis),dsSource$attend_2009,NA)
dsSource$attend_2010=ifelse((dsSource$attend_2010 %in% attendcategoreis),dsSource$attend_2010,NA)
View(dsGovresp)
table(dsGovresp$organized)
